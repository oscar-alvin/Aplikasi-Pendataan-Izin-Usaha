/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.disperindag.view;

import com.disperindag.Util.WorkerAction;
import com.disperindag.Util.WorkerMaster;
import com.disperindag.dialog.JDialog_UbahData;
import com.disperindag.model.Master;
import com.disperindag.tableModel.TabelModel_master;
import java.awt.Color;
import java.awt.Font;
import java.awt.HeadlessException;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Alvin
 */
public class Menu_Data extends javax.swing.JPanel {

    private TabelModel_master tm = null;
    private TableRowSorter sorter;
    private Connection con = null;
    private String jenis_PT = "";
    private String kriteria;

    /**
     * Creates new form Menu_Data
     */
    public Menu_Data(Connection con) {
        initComponents();
        this.con = con;
        initVar();
        setTableModel();
        resizeColumnWidth(Tabel_master);
        initTableData();
        clear();
    }

    private void buttonConfig(boolean b) {
        btn_tambah_entry.setEnabled(b);
        btn_edit_entry.setEnabled(b);
        btn_laporan.setEnabled(b);
        btn_hapus_entry.setEnabled(b);
    }

    public void addActionListenerTambahData(ActionListener l) {
        btn_tambah_entry.addActionListener(l);
    }

    public void addActionListenerLaporan(ActionListener l) {
        btn_laporan.addActionListener(l);
    }

    public void runLoading(String msg) {
        buttonConfig(false);
        FORM_MENU_DISPERINDAG.label_status.setText(" " + msg + "\t");
        FORM_MENU_DISPERINDAG.jProgressBar1.setIndeterminate(true);
    }

    public void finishLoading() {
        FORM_MENU_DISPERINDAG.label_status.setText("DISPERINDAG SALATIGA");
        FORM_MENU_DISPERINDAG.jProgressBar1.setIndeterminate(false);
        buttonConfig(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        top = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        btn_tambah_entry = new javax.swing.JButton();
        btn_edit_entry = new javax.swing.JButton();
        btn_hapus_entry = new javax.swing.JButton();
        btn_laporan = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        pnl_search = new javax.swing.JPanel();
        btn_cari = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        combo_kriteria = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        txt_kode = new javax.swing.JTextField();
        bottom = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Tabel_master = new javax.swing.JTable();

        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.Y_AXIS));

        top.setLayout(new javax.swing.BoxLayout(top, javax.swing.BoxLayout.LINE_AXIS));

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Kelola Data", 2, 0, new java.awt.Font("Arial", 1, 14), new java.awt.Color(0, 102, 0))); // NOI18N

        btn_tambah_entry.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btn_tambah_entry.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/disperindag/img/menu_add.png"))); // NOI18N
        btn_tambah_entry.setText("Tambah Data");
        jPanel3.add(btn_tambah_entry);

        btn_edit_entry.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btn_edit_entry.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/disperindag/img/menu_edit.png"))); // NOI18N
        btn_edit_entry.setText("Edit Data");
        btn_edit_entry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_edit_entryActionPerformed(evt);
            }
        });
        jPanel3.add(btn_edit_entry);

        btn_hapus_entry.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btn_hapus_entry.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/disperindag/img/menu_delete.png"))); // NOI18N
        btn_hapus_entry.setText("Hapus Data");
        btn_hapus_entry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_hapus_entryActionPerformed(evt);
            }
        });
        jPanel3.add(btn_hapus_entry);

        btn_laporan.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btn_laporan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/disperindag/img/menu_reports.png"))); // NOI18N
        btn_laporan.setText("Laporan");
        jPanel3.add(btn_laporan);

        jCheckBox1.setText("Refresh Data");
        jCheckBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox1ItemStateChanged(evt);
            }
        });
        jPanel3.add(jCheckBox1);

        top.add(jPanel3);

        pnl_search.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Pencarian Data", 2, 0, new java.awt.Font("Arial", 1, 14), new java.awt.Color(0, 102, 0))); // NOI18N

        btn_cari.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btn_cari.setText("CARI");
        btn_cari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cariActionPerformed(evt);
            }
        });

        jPanel1.setLayout(new java.awt.GridLayout(2, 2, 5, 5));

        jLabel1.setText("Cari Berdasarkan : ");
        jPanel1.add(jLabel1);

        combo_kriteria.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "No. TDP", "Nama Perusahaan", "Jenis Perusahaan", "Nama Pengurus", "Alamat" }));
        combo_kriteria.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                combo_kriteriaItemStateChanged(evt);
            }
        });
        jPanel1.add(combo_kriteria);

        jLabel2.setText("Kata Kunci");
        jPanel1.add(jLabel2);

        txt_kode.setText("jTextField1");
        jPanel1.add(txt_kode);

        javax.swing.GroupLayout pnl_searchLayout = new javax.swing.GroupLayout(pnl_search);
        pnl_search.setLayout(pnl_searchLayout);
        pnl_searchLayout.setHorizontalGroup(
            pnl_searchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_searchLayout.createSequentialGroup()
                .addGroup(pnl_searchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_cari, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnl_searchLayout.setVerticalGroup(
            pnl_searchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_searchLayout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_cari))
        );

        top.add(pnl_search);

        add(top);

        bottom.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Tabel Data Perizinan", 2, 0, new java.awt.Font("Arial", 1, 12), new java.awt.Color(0, 102, 51))); // NOI18N
        bottom.setLayout(new java.awt.BorderLayout());

        Tabel_master.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(Tabel_master);

        bottom.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        add(bottom);
    }// </editor-fold>//GEN-END:initComponents

    private void btn_edit_entryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_edit_entryActionPerformed
        // TODO add your handling code here:
        try {
            int selectedRow = Tabel_master.convertRowIndexToModel(Tabel_master.getSelectedRow());
            if (selectedRow > -1) {
                Master mk = tm.getMaster(selectedRow);
                JDialog_UbahData ju = new JDialog_UbahData(null, true, mk, con, mk.getJenis_perusahaan());
                ju.setVisible(true);
            }
        } catch (Exception e) {
            if (e.getMessage().contains("Invalid index")) {
                JOptionPane.showMessageDialog(null, "Pilih data table terlebih dahulu");
            }
        }
    }//GEN-LAST:event_btn_edit_entryActionPerformed

    private void btn_hapus_entryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_hapus_entryActionPerformed
        // TODO add your handling code here:
        try {
            int selectedRow = Tabel_master.convertRowIndexToModel(Tabel_master.getSelectedRow());
            if (selectedRow > -1) {
                if (JOptionPane.showConfirmDialog(this, "Anda Yakin Ingin Menghapus ??",
                        "Konfirmasi", JOptionPane.OK_CANCEL_OPTION) == JOptionPane.OK_OPTION) {
                    tm.delete_master(selectedRow);
                }
            }
        } catch (HeadlessException | SQLException e) {
            JOptionPane.showMessageDialog(null, "Pilih data table terlebih dahulu");
        }
    }//GEN-LAST:event_btn_hapus_entryActionPerformed

    private void jCheckBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox1ItemStateChanged
        // TODO add your handling code here:
        if (jCheckBox1.isSelected()) {
            initTableData();
        }
    }//GEN-LAST:event_jCheckBox1ItemStateChanged

    private void btn_cariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cariActionPerformed
        // TODO add your handling code here:
        try {
            if(!kriteria.equals("") && !txt_kode.getText().equals("")){
                String kode = txt_kode.getText();
                tm.cari(kriteria, kode);
                clear();
            }
        } catch (Exception e) {
            clear();
            e.printStackTrace();
        }
    }//GEN-LAST:event_btn_cariActionPerformed

    private void combo_kriteriaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_combo_kriteriaItemStateChanged
        // TODO add your handling code here:
        if(combo_kriteria.getSelectedIndex() == 0){
            kriteria = "NO_TDP";
        }else if(combo_kriteria.getSelectedIndex() == 1){
            kriteria = "nama_perusahaan";
        }else if(combo_kriteria.getSelectedIndex() == 2){
            kriteria = "JENIS_PERUSAHAAN";
        }else if(combo_kriteria.getSelectedIndex() == 3){
            kriteria = "NAMA_PENGURUS";
        }else if(combo_kriteria.getSelectedIndex() == 4){
            kriteria = "alamat_perusahaan";
        }
    }//GEN-LAST:event_combo_kriteriaItemStateChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Tabel_master;
    private javax.swing.JPanel bottom;
    private javax.swing.JButton btn_cari;
    private javax.swing.JButton btn_edit_entry;
    private javax.swing.JButton btn_hapus_entry;
    private javax.swing.JButton btn_laporan;
    private javax.swing.JButton btn_tambah_entry;
    private javax.swing.JComboBox combo_kriteria;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel pnl_search;
    private javax.swing.JPanel top;
    private javax.swing.JTextField txt_kode;
    // End of variables declaration//GEN-END:variables

    private void setTableModel() {
        Tabel_master.setModel(tm);
        Tabel_master.setRowSorter(sorter);
    }

    public void resizeColumnWidth(JTable table) {
        table.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        table.getColumnModel().getColumn(0).setPreferredWidth(27);
        table.getColumnModel().getColumn(1).setPreferredWidth(50);
        table.getColumnModel().getColumn(2).setPreferredWidth(50);
        table.getColumnModel().getColumn(3).setPreferredWidth(25);
        table.getColumnModel().getColumn(4).setPreferredWidth(40);
        table.getColumnModel().getColumn(5).setPreferredWidth(125);
        table.getColumnModel().getColumn(6).setPreferredWidth(100);
        table.getColumnModel().getColumn(7).setPreferredWidth(100);
        table.setAutoResizeMode(JTable.AUTO_RESIZE_LAST_COLUMN);
    }

    private void initTableData() {
        try {
            new WorkerMaster(con, tm, new WorkerAction() {
                @Override
                public void startLoading() {
                    runLoading("LOADING DATABASE");
                }

                @Override
                public void doneLoading() {
                    finishLoading();
                }
            }).execute();
        } catch (SQLException ex) {
            Logger.getLogger(Menu_Data.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void initVar() {
        tm = new TabelModel_master(con);
        sorter = new TableRowSorter(tm);
    }

    private void clear() {
        combo_kriteria.setSelectedIndex(-1);
        txt_kode.setText("");
    }
}
