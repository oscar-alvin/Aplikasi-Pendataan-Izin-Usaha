/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.disperindag.PanelReport;

import java.awt.CardLayout;
import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author Alvin
 */
public class Panel_laporan extends javax.swing.JPanel {

    private ImageIcon icon = null;
    private CardLayout card = null;
    private laporan lap = new laporan();
    private pnl_listP lp = new pnl_listP();
    private pnl_hurufAwal ha = new pnl_hurufAwal();
    private pnl_komuditi pk = new pnl_komuditi();
    private pnl_komuditiUtama pku = new pnl_komuditiUtama();
    private pnl_ModalKegUsaha pmu = new pnl_ModalKegUsaha();
    private pnl_bentukUsaha pbu = new pnl_bentukUsaha();
    private pnl_kegUsaha pkegu = new pnl_kegUsaha();
    private pnl_UsahaPokok pup = new pnl_UsahaPokok();
    private pnl_PenanamanModal ppm = new pnl_PenanamanModal();
    private pnl_kecamatan pkec = new pnl_kecamatan();
    private pnl_kelurahan pkel = new pnl_kelurahan();
    private pnl_sektorUsaha psu = new pnl_sektorUsaha();
//    private pnl_format pf = new pnl_format();
    private Jumlah_Perusahaan jp = new Jumlah_Perusahaan();
    private pnl_lapBulanan plb = new pnl_lapBulanan();
    private pnl_masaLaku pml = new pnl_masaLaku();
    private String[] list_laporan = {"LIST PERUSAHAAN", "DIREKTORI BERDASARKAN HURUF AWAL NAMA PERUSAHAAN",
        "DIREKTORI BERDASARKAN KOMUDITI", "DIREKTORI BERDASARKAN KOMUDITI UTAMA",
        "DIREKTORI BERDASARKAN MODAL DAN KEGIATAN USAHA", "DIREKTORI BERDASARKAN BENTUK USAHA",
        "DIREKTORI BERDASARKAN KEGIATAN USAHA", "DIREKTORI BERDASARKAN KEGIATAN USAHA POKOK",
        "DIREKTORI BERDASARKAN BENTUK PENANAMAN MODAL",
        "DIREKTORI BERDASARKAN KECAMATAN", "DIREKTORI BERDASARKAN KELURAHAN",
        "DIREKTORI BERDASARKAN SEKTOR USAHA", "JUMLAH PERUSAHAAN", 
        "LAPORAN PERUSAHAAN PERBULAN", "LAPORAN BERDASARKAN MASA LAKU IZIN"};

    /**
     * Creates new form Panel_laporan
     */
    public Panel_laporan() {
        initComponents();
        panel_top.setPreferredSize(new Dimension(1000, 500));
        initJlist();
        card = (CardLayout) panel_card.getLayout();
        initCard();
    }

    private void initJlist() {
        DefaultListModel model = new DefaultListModel();
        for (String s : list_laporan) {
            model.addElement(s);
        }
        jList1.setModel(model);
    }

    private void initCard() {
        panel_card.add(lp, "1");
        panel_card.add(ha, "2");
        panel_card.add(pk, "3");
        panel_card.add(pku, "4");
        panel_card.add(pmu, "5");
        panel_card.add(pbu, "6");
        panel_card.add(pkegu, "7");
        panel_card.add(pup, "8");
        panel_card.add(ppm, "9");
        panel_card.add(pkec, "10");
        panel_card.add(pkel, "11");
        panel_card.add(psu, "12");
        panel_card.add(jp, "13");
        panel_card.add(plb, "14");
        panel_card.add(pml, "15");

        card.show(panel_card, "1");

        lp.addActionListenerLISTPERUSAHAAN(new AksiButton_Menu_LISTPERUSAHAAN());
        ha.addActionListenerHURUFAWAL(new AksiButton_Menu_awalPerusahaan());
        pk.addActionListenerKOMUDITI(new AksiButton_Menu_Komuditi());
        pku.addActionListenerKOMUDITIUTAMA(new AksiButton_Menu_KomuditiUtama());
        pmu.addActionListenerMODALKEGUSAHA(new AksiButton_Menu_ModalKegUsaha());
        pup.addActionListenerUSAHAPOKOK(new AksiButton_Menu_KegUsahaPokok());
        pbu.addActionListenerBENTUKUSAHA(new AksiButton_Menu_BentukUsaha());
        pkegu.addActionListenerKEGUSAHA(new AksiButton_Menu_KegUsaha());
        pup.addActionListenerUSAHAPOKOK(new AksiButton_Menu_KegUsahaPokok());
        ppm.addActionListenerPENANAMANMODAL(new AksiButton_Menu_PenanamanModal());
        pkec.addActionListenerBENTUKKECAMATAN(new AksiButton_Menu_BENTUKKecamatan());
        pkel.addActionListenerBENTUKKELURAHAN(new AksiButton_Menu_BENTUKKelurahan());
        psu.addActionListenerSEKTORUSAHA(new AksiButton_Menu_sektorUsaha());
        jp.addActionListener_BtnOK(new AksiButton_Menu_JumlahPerusahaan());
        plb.addActionListenerLAPBulanan(new AksiButton_Menu_lapBulanan());
        pml.addActionListenerMassaLaku(new AksiButton_Menu_MasaLaku());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel_top = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        panel_card = new javax.swing.JPanel();

        setBorder(javax.swing.BorderFactory.createTitledBorder(null, "LAPORAN PERIZINAN", 2, 0, new java.awt.Font("Tahoma", 1, 14), new java.awt.Color(0, 102, 0))); // NOI18N

        panel_top.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        panel_top.setLayout(new javax.swing.BoxLayout(panel_top, javax.swing.BoxLayout.LINE_AXIS));

        jList1.setBackground(new java.awt.Color(255, 255, 153));
        jList1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jList1.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jList1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jList1.setSelectionBackground(new java.awt.Color(153, 153, 153));
        jList1.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jList1ValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jList1);

        panel_top.add(jScrollPane1);

        panel_card.setPreferredSize(new java.awt.Dimension(200, 504));
        panel_card.setLayout(new java.awt.CardLayout());
        panel_top.add(panel_card);

        add(panel_top);
    }// </editor-fold>//GEN-END:initComponents

    private void jList1ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jList1ValueChanged
        // TODO add your handling code here:
        try {
            int selected = jList1.getSelectedIndex();
            card.show(panel_card, String.valueOf(selected + 1));
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jList1ValueChanged
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel panel_card;
    private javax.swing.JPanel panel_top;
    // End of variables declaration//GEN-END:variables

    class AksiButton_Menu_LISTPERUSAHAAN implements ActionListener {

        @Override
        public void actionPerformed(ActionEvent e) {
            if (!(lp.getKodeData().equals(""))) {
                lap.list_perusahaan(lp.getKodeData());
                lp.clear();
            }
        }
    }

    class AksiButton_Menu_awalPerusahaan implements ActionListener {

        @Override
        public void actionPerformed(ActionEvent e) {
            if (ha.getHurufAwal().length > -1) {
                lap.Hurufawal(ha.getHurufAwal());
                ha.clear();
            }
        }
    }

    class AksiButton_Menu_Komuditi implements ActionListener {

        @Override
        public void actionPerformed(ActionEvent e) {
            if (pk.getKomuditi().length > -1) {
                lap.Komuditi(pk.getKomuditi());
                pk.clear();
            }
        }
    }

    class AksiButton_Menu_KomuditiUtama implements ActionListener {

        @Override
        public void actionPerformed(ActionEvent e) {
            if (pku.getKomuditiUtama().length > -1) {
                lap.KomuditiUtama(pku.getKomuditiUtama());
                pku.clear();
            }
        }
    }

    class AksiButton_Menu_ModalKegUsaha implements ActionListener {

        @Override
        public void actionPerformed(ActionEvent e) {
            if (pmu.getMODALKEGUSAHA().length > -1) {
                lap.ModalKegUsaha(pmu.getMODALKEGUSAHA());
                pmu.clear();
            }
        }
    }

    class AksiButton_Menu_BentukUsaha implements ActionListener {

        @Override
        public void actionPerformed(ActionEvent e) {
            if (pbu.getBENTUKUSAHA().length > -1) {
                lap.BentukUsaha(pbu.getBENTUKUSAHA());
                pbu.clear();
            }
        }
    }

    class AksiButton_Menu_KegUsaha implements ActionListener {

        @Override
        public void actionPerformed(ActionEvent e) {
            if (pkegu.getKEGUSAHA().length > -1) {
                lap.kegUsaha(pkegu.getKEGUSAHA());
                pkegu.clear();
            }
        }
    }

    class AksiButton_Menu_KegUsahaPokok implements ActionListener {

        @Override
        public void actionPerformed(ActionEvent e) {
            if (pup.getUsahaPokok().length > -1) {
                lap.kegUsahaPokok(pup.getUsahaPokok());
                pup.clear();
            }
        }
    }

    class AksiButton_Menu_PenanamanModal implements ActionListener {

        @Override
        public void actionPerformed(ActionEvent e) {
            if (ppm.getPenanamanModal().length > -1) {
                lap.PenanamanModal(ppm.getPenanamanModal());
                ppm.clear();
            }
        }
    }

    class AksiButton_Menu_BENTUKKecamatan implements ActionListener {

        @Override
        public void actionPerformed(ActionEvent e) {
            if (pkec.getBENTUKKECAMATAN().length > -1) {
                lap.listKecamatan(pkec.getBENTUKKECAMATAN());
                pkec.clear();
            }
        }
    }

    class AksiButton_Menu_BENTUKKelurahan implements ActionListener {

        @Override
        public void actionPerformed(ActionEvent e) {
            if (pkel.getBENTUKKELURAHAN().length > -1) {
                lap.listKelurahan(pkel.getBENTUKKELURAHAN());
                pkel.clear();
            }
        }
    }

    class AksiButton_Menu_JumlahPerusahaan implements ActionListener {

        @Override
        public void actionPerformed(ActionEvent e) {
            lap.jumlahPerusahaan();
        }
    }

    class AksiButton_Menu_lapBulanan implements ActionListener {

        @Override
        public void actionPerformed(ActionEvent e) {
            if (plb.getBulan().length > -1) {
                lap.laporanBulanan(plb.getBulan());
                plb.clear();
            }
        }
    }

    class AksiButton_Menu_sektorUsaha implements ActionListener {

        @Override
        public void actionPerformed(ActionEvent e) {
            if (psu.getSektorUsaha().length > -1) {
                lap.SektorUsaha(psu.getSektorUsaha());
                psu.clear();
            }
        }
    }

    class AksiButton_Menu_MasaLaku implements ActionListener {

        @Override
        public void actionPerformed(ActionEvent e) {
            if (pml.getMasaLaku().length > -1) {
                lap.masa_laku(pml.getMasaLaku());
                pml.clear();
            }
        }
    }
    
    class AksiButton_Menu_FormatDiatur implements ActionListener {

        @Override
        public void actionPerformed(ActionEvent e) {
            JOptionPane.showMessageDialog(null, "Fungsi Tdk Tersedia");
        }
    }
}
